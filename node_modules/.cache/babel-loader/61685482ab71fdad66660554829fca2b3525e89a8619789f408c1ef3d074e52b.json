{"ast":null,"code":"import BaseService from \"../../utils/BaseService\";\nexport const USER_SET_AUTH_CHECKED = \"USER/AUTH_CHEKED\";\nexport const USER_SET = \"USER/SET\";\nexport const login = () => dispatch => {\n  return BaseService.login().then(res => {\n    dispatch({\n      type: USER_SET,\n      payload: res.user\n    });\n    dispatch({\n      type: USER_SET_AUTH_CHECKED,\n      payload: true\n    });\n    BaseService.setTokens(res.accessToken, res.refreshToken);\n  });\n};\nexport const register = data => dispatch => {\n  return BaseService.register(data).then(res => {\n    dispatch({\n      type: USER_SET,\n      payload: res.user\n    });\n    dispatch({\n      type: USER_SET_AUTH_CHECKED,\n      payload: true\n    });\n    BaseService.setTokens(res.accessToken, res.refreshToken);\n  });\n};\nexport const checkUserAuth = () => dispatch => {\n  if (localStorage.getItem(\"accessToken\")) {\n    BaseService.getUserData().then(res => {\n      dispatch({\n        type: USER_SET,\n        payload: res.user\n      });\n      dispatch({\n        type: USER_SET_AUTH_CHECKED,\n        payload: true\n      });\n    });\n  } else {\n    dispatch({\n      type: USER_SET_AUTH_CHECKED,\n      payload: true\n    });\n  }\n};","map":{"version":3,"names":["BaseService","USER_SET_AUTH_CHECKED","USER_SET","login","dispatch","then","res","type","payload","user","setTokens","accessToken","refreshToken","register","data","checkUserAuth","localStorage","getItem","getUserData"],"sources":["C:/Users/dogareva/Documents/GitHub/react-burger-js/src/services/user/action.jsx"],"sourcesContent":["import BaseService from \"../../utils/BaseService\";\r\nexport const USER_SET_AUTH_CHECKED = \"USER/AUTH_CHEKED\";\r\nexport const USER_SET = \"USER/SET\";\r\nexport const login = () => (dispatch) => {\r\n  return BaseService.login().then((res) => {\r\n    dispatch({\r\n      type: USER_SET,\r\n      payload: res.user,\r\n    });\r\n    dispatch({\r\n      type: USER_SET_AUTH_CHECKED,\r\n      payload: true,\r\n    });\r\n    BaseService.setTokens(res.accessToken, res.refreshToken);\r\n  });\r\n};\r\nexport const register = (data) => (dispatch) => {\r\n  return BaseService.register(data).then((res) => {\r\n    dispatch({\r\n      type: USER_SET,\r\n      payload: res.user,\r\n    });\r\n    dispatch({\r\n      type: USER_SET_AUTH_CHECKED,\r\n      payload: true,\r\n    });\r\n    BaseService.setTokens(res.accessToken, res.refreshToken);\r\n  });\r\n};\r\nexport const checkUserAuth = () => (dispatch) => {\r\n  if (localStorage.getItem(\"accessToken\")) {\r\n    BaseService.getUserData()\r\n      .then(res => {\r\n        dispatch({\r\n          type: USER_SET,\r\n          payload: res.user,\r\n        });\r\n        dispatch({\r\n          type: USER_SET_AUTH_CHECKED,\r\n          payload: true,\r\n        });\r\n      })\r\n  } else {\r\n    dispatch({\r\n      type: USER_SET_AUTH_CHECKED,\r\n      payload: true,\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAO,MAAMC,qBAAqB,GAAG,kBAAkB;AACvD,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAOC,QAAQ,IAAK;EACvC,OAAOJ,WAAW,CAACG,KAAK,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IACvCF,QAAQ,CAAC;MACPG,IAAI,EAAEL,QAAQ;MACdM,OAAO,EAAEF,GAAG,CAACG;IACf,CAAC,CAAC;IACFL,QAAQ,CAAC;MACPG,IAAI,EAAEN,qBAAqB;MAC3BO,OAAO,EAAE;IACX,CAAC,CAAC;IACFR,WAAW,CAACU,SAAS,CAACJ,GAAG,CAACK,WAAW,EAAEL,GAAG,CAACM,YAAY,CAAC;EAC1D,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAMV,QAAQ,IAAK;EAC9C,OAAOJ,WAAW,CAACa,QAAQ,CAACC,IAAI,CAAC,CAACT,IAAI,CAAEC,GAAG,IAAK;IAC9CF,QAAQ,CAAC;MACPG,IAAI,EAAEL,QAAQ;MACdM,OAAO,EAAEF,GAAG,CAACG;IACf,CAAC,CAAC;IACFL,QAAQ,CAAC;MACPG,IAAI,EAAEN,qBAAqB;MAC3BO,OAAO,EAAE;IACX,CAAC,CAAC;IACFR,WAAW,CAACU,SAAS,CAACJ,GAAG,CAACK,WAAW,EAAEL,GAAG,CAACM,YAAY,CAAC;EAC1D,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMG,aAAa,GAAGA,CAAA,KAAOX,QAAQ,IAAK;EAC/C,IAAIY,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;IACvCjB,WAAW,CAACkB,WAAW,CAAC,CAAC,CACtBb,IAAI,CAACC,GAAG,IAAI;MACXF,QAAQ,CAAC;QACPG,IAAI,EAAEL,QAAQ;QACdM,OAAO,EAAEF,GAAG,CAACG;MACf,CAAC,CAAC;MACFL,QAAQ,CAAC;QACPG,IAAI,EAAEN,qBAAqB;QAC3BO,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,MAAM;IACLJ,QAAQ,CAAC;MACPG,IAAI,EAAEN,qBAAqB;MAC3BO,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
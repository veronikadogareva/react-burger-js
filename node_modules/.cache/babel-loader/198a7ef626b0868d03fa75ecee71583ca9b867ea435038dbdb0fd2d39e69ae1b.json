{"ast":null,"code":"const BASEURL = \"https://norma.nomoreparties.space/api\";\nexport default class BaseService {\n  static sendRequest(url) {\n    return fetch(BASEURL + url).then(res => {\n      if (!res.ok) {\n        throw new Error(`Произошла ошибка при выполнении запроса. Код ошибки: ${res.status}`);\n      }\n      return res.json();\n    }).catch(err => {\n      console.error(\"Ошибка запроса:\", err);\n      throw err;\n    });\n  }\n  static getIngredients() {\n    const url = \"/ingredients\";\n    return this.sendRequest(url);\n  }\n}","map":{"version":3,"names":["BASEURL","BaseService","sendRequest","url","fetch","then","res","ok","Error","status","json","catch","err","console","error","getIngredients"],"sources":["C:/Users/dogareva/Documents/GitHub/react-burger-js/src/utils/BaseService.jsx"],"sourcesContent":["const BASEURL = \"https://norma.nomoreparties.space/api\";\r\n\r\nexport default class BaseService {\r\n  static sendRequest(url) {\r\n    return fetch(BASEURL + url)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\r\n            `Произошла ошибка при выполнении запроса. Код ошибки: ${res.status}`\r\n          );\r\n        }\r\n        return res.json();\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Ошибка запроса:\", err);\r\n        throw err;\r\n      });\r\n  }\r\n  static getIngredients() {\r\n    const url = \"/ingredients\";\r\n    return this.sendRequest(url);\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uCAAuC;AAEvD,eAAe,MAAMC,WAAW,CAAC;EAC/B,OAAOC,WAAWA,CAACC,GAAG,EAAE;IACtB,OAAOC,KAAK,CAACJ,OAAO,GAAGG,GAAG,CAAC,CACxBE,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CACb,wDAAwDF,GAAG,CAACG,MAAM,EACpE,CAAC;MACH;MACA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;MACrC,MAAMA,GAAG;IACX,CAAC,CAAC;EACN;EACA,OAAOG,cAAcA,CAAA,EAAG;IACtB,MAAMZ,GAAG,GAAG,cAAc;IAC1B,OAAO,IAAI,CAACD,WAAW,CAACC,GAAG,CAAC;EAC9B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
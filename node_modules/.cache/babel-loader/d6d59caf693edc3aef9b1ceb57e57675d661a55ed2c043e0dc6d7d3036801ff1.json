{"ast":null,"code":"import { type } from \"@testing-library/user-event/dist/type\";\nimport BaseService from \"../../utils/BaseService\";\nimport { CONSTRUCTOR_INGREDIENTS_CLEAR } from \"../constructorIngredients/action\";\nexport const USER_SET_AUTH_CHECKED = \"USER/AUTH_CHEKED\";\nexport const USER_SET = \"USER/SET\";\nexport const login = data => dispatch => {\n  return BaseService.login(data).then(res => {\n    dispatch({\n      type: USER_SET,\n      payload: res.user\n    });\n    dispatch({\n      type: USER_SET_AUTH_CHECKED,\n      payload: true\n    });\n    BaseService.setTokens(res.accessToken, res.refreshToken);\n  });\n};\nexport const register = data => dispatch => {\n  return BaseService.register(data).then(res => {\n    dispatch({\n      type: USER_SET,\n      payload: res.user\n    });\n    dispatch({\n      type: USER_SET_AUTH_CHECKED,\n      payload: true\n    });\n    BaseService.setTokens(res.accessToken, res.refreshToken);\n  });\n};\nexport const checkUserAuth = () => dispatch => {\n  if (localStorage.getItem(\"accessToken\")) {\n    BaseService.getUserData().then(res => {\n      dispatch({\n        type: USER_SET,\n        payload: res.user\n      });\n      dispatch({\n        type: USER_SET_AUTH_CHECKED,\n        payload: true\n      });\n    });\n  } else {\n    dispatch({\n      type: USER_SET_AUTH_CHECKED,\n      payload: true\n    });\n  }\n};\nexport const logout = navigate => dispatch => {\n  return BaseService.logout().then(() => {\n    dispatch({\n      type: USER_SET,\n      payload: null\n    });\n    dispatch({\n      type: CONSTRUCTOR_INGREDIENTS_CLEAR\n    });\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    navigate(\"/\");\n  });\n};\nexport const updateUserInfo = data => dispatch => {\n  return BaseService.updateUserData(data).then(res => {\n    dispatch({\n      type: USER_SET,\n      payload: res.user\n    });\n  });\n};","map":{"version":3,"names":["type","BaseService","CONSTRUCTOR_INGREDIENTS_CLEAR","USER_SET_AUTH_CHECKED","USER_SET","login","data","dispatch","then","res","payload","user","setTokens","accessToken","refreshToken","register","checkUserAuth","localStorage","getItem","getUserData","logout","navigate","removeItem","updateUserInfo","updateUserData"],"sources":["C:/Users/dogareva/Documents/GitHub/react-burger-js/src/services/user/action.jsx"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\r\nimport BaseService from \"../../utils/BaseService\";\r\nimport { CONSTRUCTOR_INGREDIENTS_CLEAR } from \"../constructorIngredients/action\";\r\nexport const USER_SET_AUTH_CHECKED = \"USER/AUTH_CHEKED\";\r\nexport const USER_SET = \"USER/SET\";\r\nexport const login = (data) => (dispatch) => {\r\n  return BaseService.login(data).then((res) => {\r\n    dispatch({\r\n      type: USER_SET,\r\n      payload: res.user,\r\n    });\r\n    dispatch({\r\n      type: USER_SET_AUTH_CHECKED,\r\n      payload: true,\r\n    });\r\n    BaseService.setTokens(res.accessToken, res.refreshToken);\r\n  });\r\n};\r\nexport const register = (data) => (dispatch) => {\r\n  return BaseService.register(data).then((res) => {\r\n    dispatch({\r\n      type: USER_SET,\r\n      payload: res.user,\r\n    });\r\n    dispatch({\r\n      type: USER_SET_AUTH_CHECKED,\r\n      payload: true,\r\n    });\r\n    BaseService.setTokens(res.accessToken, res.refreshToken);\r\n  });\r\n};\r\nexport const checkUserAuth = () => (dispatch) => {\r\n  if (localStorage.getItem(\"accessToken\")) {\r\n    BaseService.getUserData().then((res) => {\r\n      dispatch({\r\n        type: USER_SET,\r\n        payload: res.user,\r\n      });\r\n      dispatch({\r\n        type: USER_SET_AUTH_CHECKED,\r\n        payload: true,\r\n      });\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: USER_SET_AUTH_CHECKED,\r\n      payload: true,\r\n    });\r\n  }\r\n};\r\nexport const logout = (navigate) => (dispatch) => {\r\n  return BaseService.logout().then(() => {\r\n    dispatch({\r\n      type: USER_SET,\r\n      payload: null,\r\n    });\r\n    dispatch({\r\n      type:CONSTRUCTOR_INGREDIENTS_CLEAR,\r\n    })\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    navigate(\"/\");\r\n  });\r\n};\r\nexport const updateUserInfo = (data) => (dispatch) => {\r\n  return BaseService.updateUserData(data).then((res) => {\r\n    dispatch({\r\n      type: USER_SET,\r\n      payload: res.user,\r\n    });\r\n  });\r\n};\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAC5D,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,6BAA6B,QAAQ,kCAAkC;AAChF,OAAO,MAAMC,qBAAqB,GAAG,kBAAkB;AACvD,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAMC,QAAQ,IAAK;EAC3C,OAAON,WAAW,CAACI,KAAK,CAACC,IAAI,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IAC3CF,QAAQ,CAAC;MACPP,IAAI,EAAEI,QAAQ;MACdM,OAAO,EAAED,GAAG,CAACE;IACf,CAAC,CAAC;IACFJ,QAAQ,CAAC;MACPP,IAAI,EAAEG,qBAAqB;MAC3BO,OAAO,EAAE;IACX,CAAC,CAAC;IACFT,WAAW,CAACW,SAAS,CAACH,GAAG,CAACI,WAAW,EAAEJ,GAAG,CAACK,YAAY,CAAC;EAC1D,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMC,QAAQ,GAAIT,IAAI,IAAMC,QAAQ,IAAK;EAC9C,OAAON,WAAW,CAACc,QAAQ,CAACT,IAAI,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IAC9CF,QAAQ,CAAC;MACPP,IAAI,EAAEI,QAAQ;MACdM,OAAO,EAAED,GAAG,CAACE;IACf,CAAC,CAAC;IACFJ,QAAQ,CAAC;MACPP,IAAI,EAAEG,qBAAqB;MAC3BO,OAAO,EAAE;IACX,CAAC,CAAC;IACFT,WAAW,CAACW,SAAS,CAACH,GAAG,CAACI,WAAW,EAAEJ,GAAG,CAACK,YAAY,CAAC;EAC1D,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAME,aAAa,GAAGA,CAAA,KAAOT,QAAQ,IAAK;EAC/C,IAAIU,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;IACvCjB,WAAW,CAACkB,WAAW,CAAC,CAAC,CAACX,IAAI,CAAEC,GAAG,IAAK;MACtCF,QAAQ,CAAC;QACPP,IAAI,EAAEI,QAAQ;QACdM,OAAO,EAAED,GAAG,CAACE;MACf,CAAC,CAAC;MACFJ,QAAQ,CAAC;QACPP,IAAI,EAAEG,qBAAqB;QAC3BO,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,MAAM;IACLH,QAAQ,CAAC;MACPP,IAAI,EAAEG,qBAAqB;MAC3BO,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AACD,OAAO,MAAMU,MAAM,GAAIC,QAAQ,IAAMd,QAAQ,IAAK;EAChD,OAAON,WAAW,CAACmB,MAAM,CAAC,CAAC,CAACZ,IAAI,CAAC,MAAM;IACrCD,QAAQ,CAAC;MACPP,IAAI,EAAEI,QAAQ;MACdM,OAAO,EAAE;IACX,CAAC,CAAC;IACFH,QAAQ,CAAC;MACPP,IAAI,EAACE;IACP,CAAC,CAAC;IACFe,YAAY,CAACK,UAAU,CAAC,aAAa,CAAC;IACtCL,YAAY,CAACK,UAAU,CAAC,cAAc,CAAC;IACvCD,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAME,cAAc,GAAIjB,IAAI,IAAMC,QAAQ,IAAK;EACpD,OAAON,WAAW,CAACuB,cAAc,CAAClB,IAAI,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IACpDF,QAAQ,CAAC;MACPP,IAAI,EAAEI,QAAQ;MACdM,OAAO,EAAED,GAAG,CAACE;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
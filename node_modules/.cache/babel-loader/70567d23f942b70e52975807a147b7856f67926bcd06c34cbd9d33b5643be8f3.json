{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { reducer as ingredientsReducer } from \"./ingredients/reducer\";\nimport { reducer as selectedIngredientReducer } from \"./selectedIngredient/reducer\";\nimport { reducer as constructorIngredientsReducer } from \"./constructorIngredients/reducer\";\nimport { reducer as orderReducer } from \"./order/reducer\";\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\nimport { thunk } from \"redux-thunk\";\nconst rootReducer = combineReducers({\n  ingredients: ingredientsReducer,\n  selectedIngredient: selectedIngredientReducer,\n  constructorIngredients: constructorIngredientsReducer,\n  order: orderReducer\n});\nexport const configureStore = initialState => {\n  return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n};","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","reducer","ingredientsReducer","selectedIngredientReducer","constructorIngredientsReducer","orderReducer","composeWithDevTools","thunk","rootReducer","ingredients","selectedIngredient","constructorIngredients","order","configureStore","initialState"],"sources":["C:/Projects/react-burger-js/src/services/store.jsx"],"sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { reducer as ingredientsReducer} from \"./ingredients/reducer\";\r\nimport { reducer as selectedIngredientReducer} from \"./selectedIngredient/reducer\";\r\nimport { reducer as constructorIngredientsReducer } from \"./constructorIngredients/reducer\";\r\nimport { reducer as orderReducer} from \"./order/reducer\";\r\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\r\nimport { thunk } from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n    selectedIngredient:selectedIngredientReducer,\r\n    constructorIngredients:constructorIngredientsReducer,\r\n    order:orderReducer,\r\n})\r\nexport const configureStore = (initialState) => {\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeWithDevTools(applyMiddleware(thunk))\r\n    );\r\n}"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACrE,SAASC,OAAO,IAAIC,kBAAkB,QAAO,uBAAuB;AACpE,SAASD,OAAO,IAAIE,yBAAyB,QAAO,8BAA8B;AAClF,SAASF,OAAO,IAAIG,6BAA6B,QAAQ,kCAAkC;AAC3F,SAASH,OAAO,IAAII,YAAY,QAAO,iBAAiB;AACxD,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,KAAK,QAAQ,aAAa;AAEnC,MAAMC,WAAW,GAAGT,eAAe,CAAC;EAChCU,WAAW,EAAEP,kBAAkB;EAC/BQ,kBAAkB,EAACP,yBAAyB;EAC5CQ,sBAAsB,EAACP,6BAA6B;EACpDQ,KAAK,EAACP;AACV,CAAC,CAAC;AACF,OAAO,MAAMQ,cAAc,GAAIC,YAAY,IAAK;EAC5C,OAAOd,WAAW,CACdQ,WAAW,EACXM,YAAY,EACZR,mBAAmB,CAACR,eAAe,CAACS,KAAK,CAAC,CAC9C,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
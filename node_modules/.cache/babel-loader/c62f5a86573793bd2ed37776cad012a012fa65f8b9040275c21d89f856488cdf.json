{"ast":null,"code":"import BaseService from '../../utils/BaseService';\nexport const INGREDIENTS_LOADING = \"INGREDIENTS/LOADING\";\nexport const INGREDIENTS_SUCCESS = \"INGREDIENTS/SUCCESS\";\nexport const INGREDIENTS_ERROR = \"INGREDIENTS/ERROR\";\nexport const loadIngredients = () => dispatch => {\n  return BaseService.getIngredients().then(res => {\n    dispatch({\n      type: INGREDIENTS_LOADING,\n      payload: res\n    });\n  }).catch(err => {\n    dispatch({\n      type: INGREDIENTS_ERROR,\n      payload: err.message\n    });\n  });\n};","map":{"version":3,"names":["BaseService","INGREDIENTS_LOADING","INGREDIENTS_SUCCESS","INGREDIENTS_ERROR","loadIngredients","dispatch","getIngredients","then","res","type","payload","catch","err","message"],"sources":["C:/Users/dogareva/Documents/GitHub/react-burger-js/src/services/ingredients/action.jsx"],"sourcesContent":["import BaseService from '../../utils/BaseService'\r\nexport const INGREDIENTS_LOADING = \"INGREDIENTS/LOADING\";\r\nexport const INGREDIENTS_SUCCESS = \"INGREDIENTS/SUCCESS\";\r\nexport const INGREDIENTS_ERROR = \"INGREDIENTS/ERROR\";\r\nexport const loadIngredients = () => (dispatch) => {\r\n    return BaseService.getIngredients()\r\n        .then( res => {\r\n            dispatch({\r\n                type:INGREDIENTS_LOADING,\r\n                payload:res,\r\n            })\r\n        })\r\n        .catch( err => {\r\n            dispatch({\r\n                type:INGREDIENTS_ERROR,\r\n                payload:err.message,\r\n            })\r\n        })\r\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAOC,QAAQ,IAAK;EAC/C,OAAOL,WAAW,CAACM,cAAc,CAAC,CAAC,CAC9BC,IAAI,CAAEC,GAAG,IAAI;IACVH,QAAQ,CAAC;MACLI,IAAI,EAACR,mBAAmB;MACxBS,OAAO,EAACF;IACZ,CAAC,CAAC;EACN,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAI;IACXP,QAAQ,CAAC;MACLI,IAAI,EAACN,iBAAiB;MACtBO,OAAO,EAACE,GAAG,CAACC;IAChB,CAAC,CAAC;EACN,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import BaseService from \"../../utils/BaseService\";\nexport const INGREDIENTS_LOADING = \"INGREDIENTS/LOADING\";\nexport const INGREDIENTS_SUCCESS = \"INGREDIENTS/SUCCESS\";\nexport const INGREDIENTS_ERROR = \"INGREDIENTS/ERROR\";\nexport const loadIngredients = () => dispatch => {\n  dispatch({\n    type: INGREDIENTS_LOADING\n  });\n  return BaseService.getIngredients().then(res => {\n    dispatch({\n      type: INGREDIENTS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: INGREDIENTS_ERROR,\n      payload: err.message\n    });\n  });\n};","map":{"version":3,"names":["BaseService","INGREDIENTS_LOADING","INGREDIENTS_SUCCESS","INGREDIENTS_ERROR","loadIngredients","dispatch","type","getIngredients","then","res","payload","data","catch","err","message"],"sources":["C:/Projects/react-burger-js/src/services/ingredients/action.jsx"],"sourcesContent":["import BaseService from \"../../utils/BaseService\";\r\nexport const INGREDIENTS_LOADING = \"INGREDIENTS/LOADING\";\r\nexport const INGREDIENTS_SUCCESS = \"INGREDIENTS/SUCCESS\";\r\nexport const INGREDIENTS_ERROR = \"INGREDIENTS/ERROR\";\r\nexport const loadIngredients = () => (dispatch) => {\r\n  dispatch({ type: INGREDIENTS_LOADING });\r\n  return BaseService.getIngredients()\r\n    .then((res) => {\r\n      dispatch({\r\n        type: INGREDIENTS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: INGREDIENTS_ERROR,\r\n        payload: err.message,\r\n      });\r\n    });\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAOC,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAoB,CAAC,CAAC;EACvC,OAAOD,WAAW,CAACO,cAAc,CAAC,CAAC,CAChCC,IAAI,CAAEC,GAAG,IAAK;IACbJ,QAAQ,CAAC;MACPC,IAAI,EAAEJ,mBAAmB;MACzBQ,OAAO,EAAED,GAAG,CAACE;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdR,QAAQ,CAAC;MACPC,IAAI,EAAEH,iBAAiB;MACvBO,OAAO,EAAEG,GAAG,CAACC;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
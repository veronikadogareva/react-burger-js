{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { reducer as ingredientsReducer } from \"./ingredients/reducer\";\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\nimport { thunk } from \"redux-thunk\";\nconst rootReducer = combineReducers({\n  ingredients: ingredientsReducer\n});\nexport const configureStore = initialState => {\n  return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n};","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","reducer","ingredientsReducer","composeWithDevTools","thunk","rootReducer","ingredients","configureStore","initialState"],"sources":["C:/Users/dogareva/Documents/GitHub/react-burger-js/src/services/store.jsx"],"sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { reducer as ingredientsReducer} from \"./ingredients/reducer\";\r\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\r\nimport { thunk } from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n})\r\nexport const configureStore = (initialState) => {\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeWithDevTools(applyMiddleware(thunk))\r\n    );\r\n}"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACrE,SAASC,OAAO,IAAIC,kBAAkB,QAAO,uBAAuB;AACpE,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,KAAK,QAAQ,aAAa;AAEnC,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAChCO,WAAW,EAAEJ;AACjB,CAAC,CAAC;AACF,OAAO,MAAMK,cAAc,GAAIC,YAAY,IAAK;EAC5C,OAAOR,WAAW,CACdK,WAAW,EACXG,YAAY,EACZL,mBAAmB,CAACL,eAAe,CAACM,KAAK,CAAC,CAC9C,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
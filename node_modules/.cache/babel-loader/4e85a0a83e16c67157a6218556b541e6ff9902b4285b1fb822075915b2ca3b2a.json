{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-burger-js\\\\src\\\\components\\\\BurgerIngredients\\\\BurgerIngredients.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"simplebar-react/dist/simplebar.min.css\";\nimport SimpleBar from \"simplebar-react\";\nimport PropTypes from \"prop-types\";\nimport burgerIngredientsStyles from \"./burgerIngredients.module.css\";\nimport BurgerSection from \"../BurgerSection/BurgerSection\";\nimport Tabs from \"../Tabs/Tabs\";\nimport IngredientType from \"../../utils/types\";\nimport { useModal } from \"../../hooks/useModal\";\nimport Modal from \"../Modal/Modal\";\nimport IngredientDetails from \"../IngredientDetails/IngredientDetails\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSelectedIngredient, getIsModal } from \"../../services/selectedIngredient/selectors\";\nimport { INGREDIENT_DELETE } from \"../../services/selectedIngredient/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BurgerIngredients({\n  ingredients\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const isModal = useSelector(getIsModal);\n  const selectedIngredient = useSelector(getSelectedIngredient);\n  const closeModal = () => {\n    dispatch({\n      type: INGREDIENT_DELETE\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: burgerIngredientsStyles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text text_type_main-large\",\n        children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleBar, {\n        style: {\n          maxHeight: 716\n        },\n        onScroll: console.log(2),\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(BurgerSection, {\n            id: \"buns\",\n            ingredients: ingredients.filter(f => f.type === \"bun\"),\n            title: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BurgerSection, {\n            id: \"sauces\",\n            ingredients: ingredients.filter(f => f.type === \"sauce\"),\n            title: \"\\u0421\\u043E\\u0443\\u0441\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BurgerSection, {\n            id: \"main\",\n            ingredients: ingredients.filter(f => f.type === \"main\"),\n            title: \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isModal && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: closeModal,\n      title: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u0430\",\n      children: /*#__PURE__*/_jsxDEV(IngredientDetails, {\n        ingredient: selectedIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(BurgerIngredients, \"IOMzU3adrgjEObpowhmtr+ftH4c=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = BurgerIngredients;\nBurgerIngredients.propTypes = {\n  ingredients: PropTypes.arrayOf(IngredientType)\n};\nvar _c;\n$RefreshReg$(_c, \"BurgerIngredients\");","map":{"version":3,"names":["React","useEffect","useState","SimpleBar","PropTypes","burgerIngredientsStyles","BurgerSection","Tabs","IngredientType","useModal","Modal","IngredientDetails","useDispatch","useSelector","getSelectedIngredient","getIsModal","INGREDIENT_DELETE","jsxDEV","_jsxDEV","BurgerIngredients","ingredients","_s","dispatch","isModal","selectedIngredient","closeModal","type","Fragment","children","className","container","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","onScroll","console","log","id","filter","f","title","onClose","ingredient","_c","propTypes","arrayOf","$RefreshReg$"],"sources":["C:/Projects/react-burger-js/src/components/BurgerIngredients/BurgerIngredients.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"simplebar-react/dist/simplebar.min.css\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport burgerIngredientsStyles from \"./burgerIngredients.module.css\";\r\nimport BurgerSection from \"../BurgerSection/BurgerSection\";\r\nimport Tabs from \"../Tabs/Tabs\";\r\nimport IngredientType from \"../../utils/types\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport IngredientDetails from \"../IngredientDetails/IngredientDetails\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSelectedIngredient, getIsModal } from \"../../services/selectedIngredient/selectors\";\r\nimport { INGREDIENT_DELETE } from \"../../services/selectedIngredient/action\";\r\n\r\nexport default function BurgerIngredients({ ingredients }) {\r\n  const dispatch = useDispatch();\r\n  const isModal = useSelector(getIsModal);\r\n  const selectedIngredient = useSelector(getSelectedIngredient);\r\n  const closeModal = () => {\r\n    dispatch({\r\n      type: INGREDIENT_DELETE,\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <section className={burgerIngredientsStyles.container}>\r\n        <h2 className=\"text text_type_main-large\">Соберите бургер</h2>\r\n        <Tabs />\r\n        <SimpleBar style={{ maxHeight: 716 }} onScroll={console.log(2)}>\r\n          <ul>\r\n            <BurgerSection id=\"buns\" ingredients={ingredients.filter((f) => f.type === \"bun\")} title=\"Булки\" />\r\n            <BurgerSection id=\"sauces\" ingredients={ingredients.filter((f) => f.type === \"sauce\")} title=\"Соусы\" />\r\n            <BurgerSection id=\"main\" ingredients={ingredients.filter((f) => f.type === \"main\")} title=\"Начинки\" />\r\n          </ul>\r\n        </SimpleBar>\r\n      </section>\r\n      {isModal && (\r\n        <Modal onClose={closeModal} title=\"Детали ингредиента\">\r\n          <IngredientDetails ingredient={selectedIngredient} />\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\nBurgerIngredients.propTypes = {\r\n  ingredients: PropTypes.arrayOf(IngredientType),\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
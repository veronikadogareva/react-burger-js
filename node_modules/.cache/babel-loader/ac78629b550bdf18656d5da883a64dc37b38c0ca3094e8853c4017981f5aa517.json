{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dogareva\\\\Documents\\\\GitHub\\\\react-burger-js\\\\src\\\\components\\\\ProtectedRoute\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { getIsAuthChecked, getUser } from \"../../services/user/selectors\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { RingLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  onlyUnAuth = false,\n  component\n}) => {\n  _s();\n  const isAuthChecked = useSelector(getIsAuthChecked);\n  const user = useSelector(getUser);\n  const location = useLocation();\n  if (!isAuthChecked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        justifyContent: \"center\",\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(RingLoader, {\n        color: \"#00cccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  if (onlyUnAuth && user) {\n    const {\n      from\n    } = location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: from\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  if (!onlyUnAuth && !user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  return component;\n};\n_s(ProtectedRoute, \"c3Gmaxl3kdDdyCdPpzbGO4TwZMs=\", false, function () {\n  return [useSelector, useSelector, useLocation];\n});\n_c = ProtectedRoute;\nexport const OnlyAuth = ProtectedRoute;\nexport const OnlyUnAuth = ({\n  component\n}) => /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n  onlyUnAuth: true,\n  component: component\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n_c2 = OnlyUnAuth;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"OnlyUnAuth\");","map":{"version":3,"names":["useSelector","getIsAuthChecked","getUser","Navigate","useLocation","RingLoader","jsxDEV","_jsxDEV","ProtectedRoute","onlyUnAuth","component","_s","isAuthChecked","user","location","style","width","justifyContent","display","children","color","fileName","_jsxFileName","lineNumber","columnNumber","from","state","pathname","to","_c","OnlyAuth","OnlyUnAuth","_c2","$RefreshReg$"],"sources":["C:/Users/dogareva/Documents/GitHub/react-burger-js/src/components/ProtectedRoute/ProtectedRoute.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\"\r\nimport { getIsAuthChecked, getUser} from \"../../services/user/selectors\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { RingLoader } from \"react-spinners\";\r\n\r\nconst ProtectedRoute = ({ onlyUnAuth = false, component }) => {\r\n    const isAuthChecked = useSelector(getIsAuthChecked);\r\n    const user = useSelector(getUser);\r\n    const location = useLocation();\r\n\r\n    if (!isAuthChecked) {\r\n        return <div style={{width:\"100%\", justifyContent:\"center\", display:\"flex\"}}><RingLoader color=\"#00cccc\" /></div>\r\n    }\r\n    if (onlyUnAuth && user) {\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n        return <Navigate to={from} />\r\n    }\r\n    if (!onlyUnAuth && !user) {\r\n        return <Navigate to=\"/login\" state={{ from: location }}/>\r\n    }\r\n\r\n    return component;\r\n};\r\n\r\n export const OnlyAuth = ProtectedRoute;\r\n export const OnlyUnAuth = (({component}) => (\r\n    <ProtectedRoute onlyUnAuth={true} component={component}/>\r\n ))"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,EAAEC,OAAO,QAAO,+BAA+B;AACxE,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU,GAAG,KAAK;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,aAAa,GAAGZ,WAAW,CAACC,gBAAgB,CAAC;EACnD,MAAMY,IAAI,GAAGb,WAAW,CAACE,OAAO,CAAC;EACjC,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACQ,aAAa,EAAE;IAChB,oBAAOL,OAAA;MAAKQ,KAAK,EAAE;QAACC,KAAK,EAAC,MAAM;QAAEC,cAAc,EAAC,QAAQ;QAAEC,OAAO,EAAC;MAAM,CAAE;MAAAC,QAAA,eAACZ,OAAA,CAACF,UAAU;QAACe,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpH;EACA,IAAIf,UAAU,IAAII,IAAI,EAAE;IACpB,MAAM;MAAEY;IAAK,CAAC,GAAGX,QAAQ,CAACY,KAAK,IAAI;MAAED,IAAI,EAAE;QAAEE,QAAQ,EAAE;MAAI;IAAE,CAAC;IAC9D,oBAAOpB,OAAA,CAACJ,QAAQ;MAACyB,EAAE,EAAEH;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EACA,IAAI,CAACf,UAAU,IAAI,CAACI,IAAI,EAAE;IACtB,oBAAON,OAAA,CAACJ,QAAQ;MAACyB,EAAE,EAAC,QAAQ;MAACF,KAAK,EAAE;QAAED,IAAI,EAAEX;MAAS;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC7D;EAEA,OAAOd,SAAS;AACpB,CAAC;AAACC,EAAA,CAjBIH,cAAc;EAAA,QACMR,WAAW,EACpBA,WAAW,EACPI,WAAW;AAAA;AAAAyB,EAAA,GAH1BrB,cAAc;AAmBnB,OAAO,MAAMsB,QAAQ,GAAGtB,cAAc;AACtC,OAAO,MAAMuB,UAAU,GAAIA,CAAC;EAACrB;AAAS,CAAC,kBACpCH,OAAA,CAACC,cAAc;EAACC,UAAU,EAAE,IAAK;EAACC,SAAS,EAAEA;AAAU;EAAAW,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAC,CACzD;AAAAQ,GAAA,GAFWD,UAAU;AAAA,IAAAF,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
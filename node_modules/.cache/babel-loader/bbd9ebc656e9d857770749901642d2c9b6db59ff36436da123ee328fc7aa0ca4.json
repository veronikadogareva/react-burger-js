{"ast":null,"code":"const BASEURL = \"https://norma.nomoreparties.space/api\";\nexport default class BaseService {\n  static async checkResponse(res) {\n    const data = await res.json();\n    return res.ok ? data : Promise.reject(data);\n  }\n  static setTokens(accessToken, refreshToken) {\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n  }\n  static async refreshToken() {\n    const res = await fetch(`${BASEURL}/auth/token`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify({\n        token: localStorage.getItem(\"refreshToken\")\n      })\n    });\n    const refreshData = await this.checkResponse(res);\n    if (!refreshData.success) {\n      return Promise.reject(refreshData);\n    }\n    this.setTokens(refreshData.accessToken, refreshData.refreshToken);\n    return refreshData;\n  }\n  static async sendRequest(url, options = {}) {\n    const fullUrl = BASEURL + url;\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (accessToken) {\n      options.headers = {\n        ...options.headers,\n        Authorization: accessToken\n      };\n    }\n    try {\n      const res = await fetch(fullUrl, options);\n      return await this.checkResponse(res);\n    } catch (err) {\n      if (err.message === \"jwt expired\") {\n        const refreshData = await this.refreshToken();\n        options.headers = {\n          ...options.headers,\n          Authorization: refreshData.accessToken\n        };\n        const res = await fetch(fullUrl, options);\n        return await this.checkResponse(res);\n      } else {\n        console.error(\"Ошибка запроса:\", err);\n        throw err;\n      }\n    }\n  }\n  static getIngredients() {\n    const url = \"/ingredients\";\n    return this.sendRequest(url);\n  }\n  static sendOrder(orderData) {\n    const url = \"/orders\";\n    return this.sendRequest(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(orderData)\n    });\n  }\n  static async register(data) {\n    return this.sendRequest(\"/auth/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  static login(data) {\n    return this.sendRequest(\"/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  static getUserData() {\n    return this.sendRequest(\"/auth/user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n  static updateUserData(data) {\n    return this.sendRequest(\"/auth/user\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  static logout() {\n    return this.sendRequest(\"/auth/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token: localStorage.getItem(\"refreshToken\")\n      })\n    });\n  }\n}","map":{"version":3,"names":["BASEURL","BaseService","checkResponse","res","data","json","ok","Promise","reject","setTokens","accessToken","refreshToken","localStorage","setItem","fetch","method","headers","body","JSON","stringify","token","getItem","refreshData","success","sendRequest","url","options","fullUrl","Authorization","err","message","console","error","getIngredients","sendOrder","orderData","register","login","getUserData","updateUserData","logout"],"sources":["C:/Projects/react-burger-js/src/utils/BaseService.jsx"],"sourcesContent":["const BASEURL = \"https://norma.nomoreparties.space/api\";\r\n\r\nexport default class BaseService {\r\n  static async checkResponse(res) {\r\n    const data = await res.json();\r\n    return res.ok ? data : Promise.reject(data);\r\n  }\r\n  static setTokens(accessToken, refreshToken) {\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  }\r\n  static async refreshToken() {\r\n    const res = await fetch(`${BASEURL}/auth/token`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: localStorage.getItem(\"refreshToken\"),\r\n      }),\r\n    });\r\n    const refreshData = await this.checkResponse(res);\r\n    if (!refreshData.success) {\r\n      return Promise.reject(refreshData);\r\n    }\r\n    this.setTokens(refreshData.accessToken, refreshData.refreshToken);\r\n    return refreshData;\r\n  }\r\n  static async sendRequest(url, options = {}) {\r\n    const fullUrl = BASEURL + url;\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n    if (accessToken) {\r\n      options.headers = {\r\n        ...options.headers,\r\n        Authorization: accessToken,\r\n      };\r\n    }\r\n    try {\r\n      const res = await fetch(fullUrl, options);\r\n      return await this.checkResponse(res);\r\n    } catch (err) {\r\n      if (err.message === \"jwt expired\") {\r\n        const refreshData = await this.refreshToken();\r\n\r\n        options.headers = {\r\n          ...options.headers,\r\n          Authorization: refreshData.accessToken,\r\n        };\r\n        const res = await fetch(fullUrl, options);\r\n        return await this.checkResponse(res);\r\n      } else {\r\n        console.error(\"Ошибка запроса:\", err);\r\n        throw err;\r\n      }\r\n    }\r\n  }\r\n  static getIngredients() {\r\n    const url = \"/ingredients\";\r\n    return this.sendRequest(url);\r\n  }\r\n  static sendOrder(orderData) {\r\n    const url = \"/orders\";\r\n    return this.sendRequest(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n  }\r\n  static async register(data) {\r\n    return this.sendRequest(\"/auth/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n  static login(data) {\r\n    return this.sendRequest(\"/auth/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n  static getUserData() {\r\n    return this.sendRequest(\"/auth/user\", {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n  static updateUserData(data) {\r\n    return this.sendRequest(\"/auth/user\", {\r\n      method: \"PATCH\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n  static logout() {\r\n    return this.sendRequest(\"/auth/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        token: localStorage.getItem(\"refreshToken\"),\r\n      }),\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}